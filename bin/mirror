#!/bin/bash
#
#	mirror 1.2
#	Description: Mirror file or folder to remote host using rsync
#	Author: Angelos Michalopoulos
#	Last Updated: 03/09/2018
#
#	Argument List:
#
#	[-c]			Reverse Sync (Clone)
#	[-h hostname]	Remote Hostname
#	[-l path]		Local Path Prefix (eg. ~/Projects/)
#	[-r path]		Remote Path Prefix (eg. /mnt/backup/)
#	[-v]			Verbose Mode (Verbose and Progress of Rsync)
#	[-n]			Simulation Mode (No Actual Sync)
#	[-N]			Output Rsync Command Only (No Actual Sync)
#	[-h]			Help Screen
#	[source]		Source Path (Default: Current Directory)
#	[target]		Target Path (Default: Current Directory)
#

# Known Hosts
MAIN='Mars'
BACKUP='Saturn'

# Constants
VERSION='1.2'

C0='\033[m'			# System Default Color
C1='\033[2;38m'		# Light, Dark Green
C2='\033[3;37m'		# Regular, White
C3='\033[1;33m'		# Bold, Yellow
C4='\033[1;31m'		# Bold, Red

# Defaults
DIRECTION='Right'
SOURCE="$PWD/"
DESTINATION="$PWD"
LPREFIX=''
RPREFIX=''
RSYNC_FLAGS='a'
RSYNC_OPTIONS='--itemize-changes --delete --exclude ".DS_Store" --exclude ".AppleDouble" --delete-excluded --rsh=ssh'
RSYNC_VERBOSE=false
RSYNC_SIMULATE=false
RSYNC_EXIT=false
HELP=false
shopt -s nocasematch
[[ "$(hostname -s)" = "$MAIN" ]] && REMOTE="$BACKUP.local" || REMOTE="$MAIN.local"
shopt -u nocasematch

# Grab Passing Variables
while getopts ch:l:r:vnNh option
do
        case "${option}"
        in
                c) DIRECTION='Left';;
                h) REMOTE="${OPTARG}";;
				l) LPREFIX="${OPTARG}"
				   SOURCE=''
				   DESTINATION='';;
				r) RPREFIX="${OPTARG}"
				   SOURCE=''
				   DESTINATION='';;
				v) RSYNC_VERBOSE=true;;
				n) RSYNC_SIMULATE=true;;
				N) RSYNC_EXIT=true;;
				h) HELP=true;;
				?) HELP=true;;
        esac
done

# Parse Source & Destination Paths
shift $(($OPTIND - 1))
if [ $DIRECTION = "Right" ]; then
	[ "$1" ] && [ ${1:0:1} == '/' ] && PREFIX='' || PREFIX="${LPREFIX:-$PWD/}"
	[ "$1" ] && SOURCE="${PREFIX}${1}" && DESTINATION="${RPREFIX:-$PREFIX}${1%/}"
	[ "$2" ] && DESTINATION="${RPREFIX:-$PREFIX}$2"
	HOST1=''
	HOST2="$REMOTE:"
	[ -d "$SOURCE" ] && SOURCE="${SOURCE%/}/"
	DESTINATION="${DESTINATION// /\ }"
fi
if [ $DIRECTION = "Left" ]; then
	[ "$1" ] && [ ${1:0:1} == '/' ] && PREFIX='' || PREFIX="${LPREFIX:-$PWD/}"
	[ "$1" ] && SOURCE="${RPREFIX:-$PREFIX}${1}" && DESTINATION="${PREFIX}${1%/}"
	[ "$2" ] && DESTINATION="${PREFIX}${2}"
	HOST1="$REMOTE:"
	HOST2=''
	[ -d "$DESTINATION" ] && SOURCE="${SOURCE%/}/"
	SOURCE="${SOURCE// /\ }"
fi

# Output Application Details
echo -e "
███╗   ███╗██╗██████╗ ██████╗  ██████╗ ██████╗ 
████╗ ████║██║██╔══██╗██╔══██╗██╔═══██╗██╔══██╗
██╔████╔██║██║██████╔╝██████╔╝██║   ██║██████╔╝
██║╚██╔╝██║██║██╔══██╗██╔══██╗██║   ██║██╔══██╗
██║ ╚═╝ ██║██║██║  ██║██║  ██║╚██████╔╝██║  ██║  v${VERSION}
╚═╝     ╚═╝╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝"
echo -e "${C1}By Angelos Michalopoulos (C) 2014-2018 IT Serve. All rights reserved.$C0"

# Help Screen
if [ $HELP = true ]; then
echo -e "
Argument List:
[-c]		Reverse Sync (Clone)
[-h hostname]	Remote Hostname
[-l path]	Local Path Prefix (eg. ~/Projects/)
[-r path]	Remote Path Prefix (eg. /mnt/backup/)
[-v]		Verbose Mode (Verbose and Progress of Rsync)
[-n]		Simulation Mode (No Actual Sync)
[-N]		Output Rsync Command Only (No Actual Sync)
[-h]		Help Screen
[source]	Source Path (Default: Current Directory)
[target]	Target Path (Default: Current Directory)
"
exit 0
fi

# Check Source Path
[ -z "$HOST1" ] && [ ! -e "$SOURCE" ] && 
echo && echo -e "${C4}Source Path Does Not Exist.${C0}" && 
echo && exit 1

# Output Sync Session
REMOTE="${REMOTE#*@}"
echo && echo -e "${C2}${HOSTNAME} `[ $DIRECTION = "Right" ] &&
echo '->' || echo '<-'` ${REMOTE%.*} ${C3}${1:-$SOURCE}${C0}"

# Set Rsync Options
[ $RSYNC_VERBOSE = true ] && RSYNC_FLAGS="${RSYNC_FLAGS}Pv"
[ $RSYNC_SIMULATE = true ] && RSYNC_FLAGS="${RSYNC_FLAGS}n"

# Prepare Rsync Command
RSYNC="rsync -$RSYNC_FLAGS $RSYNC_OPTIONS 
${HOST1}\"${SOURCE}\" 
${HOST2}\"${DESTINATION}\""

# Output Rsync Command if Output Rsync is Active
if [ $RSYNC_EXIT = true ]; then
	echo
	echo -e "${C2}Rsync Command:${C0}"
	echo $RSYNC
	echo
	exit 2;
fi

# Output Warning if Simulate Mode is Active
if [ $RSYNC_SIMULATE = true ]; then
	echo
	echo -e "${C4}Simulated Sync${C0}"
fi

# Start Syncing
echo
eval $RSYNC

# Done!
echo                                              


